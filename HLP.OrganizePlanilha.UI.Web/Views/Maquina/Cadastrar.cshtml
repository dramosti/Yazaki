@model HLP.OrganizePlanilha.UI.Web.Models.MaquinaModel
@{
    ViewBag.Title = "..: Cadastrar Maquina :..";
    Layout = "~/Views/Shared/_LayoutPadrao.cshtml";
    ViewBag.Projeto = "Projeto:" + ViewBag.xProjetoLocal;        
}

<fieldset>
    <div class="container">
        <div class="row clearfix">
            <div class="col-md-6 column">
                <fieldset>
                    <legend>
                        Informações cadastrais
                    </legend>
                </fieldset>
            </div>
            <div class="col-md-6 column">
                <fieldset>
                    <legend>
                        Painéis
                    </legend>
                </fieldset>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-md-6 column">
                @using (Html.BeginForm())
                {
                    <div>
                        @Html.HiddenFor(x => x.idMAQUINA)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.xMAQUINA)
                        @Html.TextBoxFor(x => x.xMAQUINA, new { @class = "form-control", autofocus = "autofocus", placeholder = "Nome da máquina" })
                        @Html.ValidationMessageFor(x => x.xMAQUINA)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.CALIBRE)
                        @Html.TextBoxFor(x => x.CALIBRE, new { @class = "form-control", autofocus = "autofocus", placeholder = "Separe os valores da bitola com traço(-)" })
                        @Html.ValidationMessageFor(x => x.CALIBRE)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.QTDE_TERM_ESQUERDO)
                        @Html.TextBoxFor(x => x.QTDE_TERM_ESQUERDO, new { @class = "form-control", autofocus = "autofocus", placeholder = "Separe a quantidade de Terminal com traço(-)" })
                        @Html.ValidationMessageFor(x => x.QTDE_TERM_ESQUERDO)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.SELOS_ESQUERDO)
                        @Html.TextBoxFor(x => x.SELOS_ESQUERDO, new { @class = "form-control", autofocus = "autofocus", placeholder = "Selos do lado esquerdo, separe com vírgula(,)" })
                        @Html.ValidationMessageFor(x => x.SELOS_ESQUERDO)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.QTDE_TERM_DIREITO)
                        @Html.TextBoxFor(x => x.QTDE_TERM_DIREITO, new { @class = "form-control", autofocus = "autofocus", placeholder = "Separe a quantidade de Terminal com traço(-)" })
                        @Html.ValidationMessageFor(x => x.QTDE_TERM_DIREITO)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.SELOS_DIREITO)
                        @Html.TextBoxFor(x => x.SELOS_DIREITO, new { @class = "form-control", autofocus = "autofocus", placeholder = "Selos do lado direito, separe com vírgula(,)" })
                        @Html.ValidationMessageFor(x => x.SELOS_DIREITO)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.YY)
                        @Html.TextBoxFor(x => x.YY, new { @class = "form-control", autofocus = "autofocus", placeholder = "Qunatidade de cabos manuais." })
                        @Html.ValidationMessageFor(x => x.YY)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.QTDE_CAPACIDADE)
                        @Html.TextBoxFor(x => x.QTDE_CAPACIDADE, new { @class = "form-control", autofocus = "autofocus", placeholder = "Volume desejado." })
                        @Html.ValidationMessageFor(x => x.QTDE_CAPACIDADE)
                    </div>
                    <div>
                        @Html.LabelFor(x => x.QTDE_TOLERANCIA)
                        @Html.TextBoxFor(x => x.QTDE_TOLERANCIA, new { @class = "form-control", autofocus = "autofocus", placeholder = "Separe a tolerância com traço(-)" })
                        @Html.ValidationMessageFor(x => x.QTDE_TOLERANCIA)
                    </div>
                    <br/>
                    <div>
                        <input class="btn btn-danger" type="reset" id="limpar" name="limpar" value="Limpar" />
                        <input type="button" class="btn btn-warning" title="voltar" value="voltar" onclick="location.href='@Url.Action("voltar", "Maquina", new { })'" />                                                
                        <input class="btn btn-primary" type="submit" id="cadastrar" name="cadastrar" value="Cadastrar" />                        
                    </div>
    <br />
                }
            </div>
            <div class="col-md-6 column">
                <div class="container">
                    <div class="row clearfix">
                        <div class="col-md-6 column">
                            <div class="list-group">
                                <a href="#" class="list-group-item active">Totalizadores</a>
                                <div class="list-group-item">
                                    <span class="badge">
                                        @{HLP.OrganizePlanilha.UI.Web.Models.PainelModel painel = (HLP.OrganizePlanilha.UI.Web.Models.PainelModel)ViewData["painel"]; @painel.VolumeTotal}
                                    </span>Volume Total
                                </div>
                                <div class="list-group-item">
                                    <span class="badge">@painel.VolumeYY</span>Volume Y-Y
                                </div>
                                <div class="list-group-item">
                                    <span class="badge">@painel.TerminaisD</span>Terminais Direito
                                </div>
                                <div class="list-group-item">
                                    <span class="badge">@painel.SelosD</span>Selos Direito
                                </div>
                                <div class="list-group-item">
                                    <span class="badge">@painel.TerminaisE</span>Terminais Esquerdo
                                </div>
                                <div class="list-group-item">
                                    <span class="badge">@painel.SelosE</span>Selos Esquerdo
                                </div>
                            </div>

                            <fieldset>
                                <legend>Relatório de Y-Y</legend>
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <td>Bitola</td>
                                            <td>Volume</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var bitola in (IEnumerable<HLP.OrganizePlanilha.UI.Web.Models.BitolaModel>)ViewData["bitolas"])
                                        {
                                            <tr>
                                                <td>@bitola.CALIBRE</td>
                                                <td>@bitola.VOLUME</td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>

                                    </tfoot>
                                </table>
                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</fieldset>
